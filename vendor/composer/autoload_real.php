<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInitae582196b23e572ec11c90f8600094f9
=======
class ComposerAutoloaderInitecd819b94f5cbcc34a27ec41874aa650
>>>>>>> 1452ea292672dfc07d9bfc74e7215ffffa5736ee
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInitae582196b23e572ec11c90f8600094f9', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitae582196b23e572ec11c90f8600094f9', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInitecd819b94f5cbcc34a27ec41874aa650', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInitecd819b94f5cbcc34a27ec41874aa650', 'loadClassLoader'));
>>>>>>> 1452ea292672dfc07d9bfc74e7215ffffa5736ee

        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION');
        if ($useStaticLoader) {
            require_once __DIR__ . '/autoload_static.php';

<<<<<<< HEAD
            call_user_func(\Composer\Autoload\ComposerStaticInitae582196b23e572ec11c90f8600094f9::getInitializer($loader));
=======
            call_user_func(\Composer\Autoload\ComposerStaticInitecd819b94f5cbcc34a27ec41874aa650::getInitializer($loader));
>>>>>>> 1452ea292672dfc07d9bfc74e7215ffffa5736ee
        } else {
            $map = require __DIR__ . '/autoload_namespaces.php';
            foreach ($map as $namespace => $path) {
                $loader->set($namespace, $path);
            }

            $map = require __DIR__ . '/autoload_psr4.php';
            foreach ($map as $namespace => $path) {
                $loader->setPsr4($namespace, $path);
            }

            $classMap = require __DIR__ . '/autoload_classmap.php';
            if ($classMap) {
                $loader->addClassMap($classMap);
            }
        }

        $loader->register(true);

        if ($useStaticLoader) {
<<<<<<< HEAD
            $includeFiles = Composer\Autoload\ComposerStaticInitae582196b23e572ec11c90f8600094f9::$files;
=======
            $includeFiles = Composer\Autoload\ComposerStaticInitecd819b94f5cbcc34a27ec41874aa650::$files;
>>>>>>> 1452ea292672dfc07d9bfc74e7215ffffa5736ee
        } else {
            $includeFiles = require __DIR__ . '/autoload_files.php';
        }
        foreach ($includeFiles as $fileIdentifier => $file) {
<<<<<<< HEAD
            composerRequireae582196b23e572ec11c90f8600094f9($fileIdentifier, $file);
=======
            composerRequireecd819b94f5cbcc34a27ec41874aa650($fileIdentifier, $file);
>>>>>>> 1452ea292672dfc07d9bfc74e7215ffffa5736ee
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequireae582196b23e572ec11c90f8600094f9($fileIdentifier, $file)
=======
function composerRequireecd819b94f5cbcc34a27ec41874aa650($fileIdentifier, $file)
>>>>>>> 1452ea292672dfc07d9bfc74e7215ffffa5736ee
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        require $file;

        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;
    }
}
